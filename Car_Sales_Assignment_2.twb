<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Data (Assignment2_dataset)' inline='true' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Assignment2_dataset' name='excel-direct.1v0nc6h0j05tak16dp0031pnqnun'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/HP/Documents/Business_Analytics_UCW/Assignment2_dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1v0nc6h0j05tak16dp0031pnqnun' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:G1502:no:A1:G1502:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Car Colour' ordinal='1' />
            <column datatype='real' name='Car Value' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='real' name='Loan %' ordinal='5' />
            <column datatype='string' name='Car Make' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1v0nc6h0j05tak16dp0031pnqnun' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:G1502:no:A1:G1502:0' header='yes' outcome='2'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Car Colour' ordinal='1' />
            <column datatype='real' name='Car Value' ordinal='2' />
            <column datatype='string' name='Gender' ordinal='3' />
            <column datatype='string' name='State' ordinal='4' />
            <column datatype='real' name='Loan %' ordinal='5' />
            <column datatype='string' name='Car Make' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:G1502:no:A1:G1502:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Car Colour</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Car Colour]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Car Colour</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Car Value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Car Value]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Car Value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Loan %</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Loan %]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Loan %</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Car Make</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Car Make]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>Car Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data_2F9AD5B164FD4D96952D1472AB8B868F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' datatype='string' name='[Car Colour]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Car Make]' role='dimension' type='nominal' />
      <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
      <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
      <column datatype='real' name='[Loan %]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_2F9AD5B164FD4D96952D1472AB8B868F]' role='measure' type='quantitative' />
      <column-instance column='[Car Value]' derivation='Avg' name='[avg:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loan %]' derivation='Avg' name='[avg:Loan %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Value]' derivation='CountD' name='[ctd:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Value]' derivation='Avg' forecast-column-base='[avg:Car Value:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loan %]' derivation='Avg' forecast-column-base='[avg:Loan %:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Loan %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Value]' derivation='Sum' forecast-column-base='[sum:Car Value:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loan %]' derivation='Sum' forecast-column-base='[sum:Loan %:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Loan %:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Value]' derivation='Max' name='[max:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Value]' derivation='Median' name='[med:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Car Make]' derivation='Min' name='[min:Car Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Car Colour]' derivation='None' name='[none:Car Colour:nk]' pivot='key' type='nominal' />
      <column-instance column='[Car Make]' derivation='None' name='[none:Car Make:nk]' pivot='key' type='nominal' />
      <column-instance column='[Car Value]' derivation='None' name='[none:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Car Value]' derivation='Avg' name='[pcto:avg:Car Value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Loan %]' derivation='Avg' name='[pcto:avg:Loan %:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Loan %]' derivation='Max' name='[pcto:max:Loan %:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Car Value]' derivation='Sum' name='[pcto:sum:Car Value:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Loan %]' derivation='Sum' name='[pcto:sum:Loan %:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Car Value]' derivation='Sum' name='[sum:Car Value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Loan %]' derivation='Sum' name='[sum:Loan %:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Car Make:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lamborghini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rolls-Royce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isuzu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daewoo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lotus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chevrolet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Land Rover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pontiac&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aptera&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hummer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Volvo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mercedes-Benz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Subaru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Smart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maybach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spyker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GMC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chrysler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saturn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aston Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oldsmobile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ferrari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Studebaker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Citroën&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Infiniti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:sum:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[ctd:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[max:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[med:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:avg:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:sum:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[sum:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:sum:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:avg:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:max:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:sum:Loan \%:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[sum:Loan \%:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Car Colour:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Yellow&quot;</bucket>
            </map>
            <map to='#c12d40'>
              <bucket>&quot;Teal&quot;</bucket>
            </map>
            <map to='#cb3c43'>
              <bucket>&quot;Red&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;Pink&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#e66449'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Khaki&quot;</bucket>
            </map>
            <map to='#f4804a'>
              <bucket>&quot;Indigo&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f5c15b'>
              <bucket>&quot;3000&quot;</bucket>
            </map>
            <map to='#f8b053'>
              <bucket>&quot;Blue&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>&quot;Goldenrod&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Car Make:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cadillac&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lamborghini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rolls-Royce&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Acura&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morgan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Volkswagen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isuzu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plymouth&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daewoo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lotus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chevrolet&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Land Rover&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bentley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pontiac&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Geo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MINI&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tesla&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hummer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nissan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Volvo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mercedes-Benz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Subaru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BMW&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Porsche&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;Jaguar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dodge&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maserati&quot;</bucket>
            </map>
            <map to='#cf4244'>
              <bucket>&quot;Scion&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maybach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spyker&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mercury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suzuki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GMC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mitsubishi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Toyota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chrysler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saturn&quot;</bucket>
            </map>
            <map to='#e56249'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aston Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hyundai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oldsmobile&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Aptera&quot;</bucket>
            </map>
            <map to='#f6834b'>
              <bucket>&quot;Shelby&quot;</bucket>
            </map>
            <map to='#f9aa51'>
              <bucket>&quot;Smart&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ferrari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mazda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Studebaker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Citroën&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Audi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Infiniti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peugeot&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan \%:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan \%:qk]&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data' id='Data_2F9AD5B164FD4D96952D1472AB8B868F'>
            <properties context=''>
              <relation connection='excel-direct.1v0nc6h0j05tak16dp0031pnqnun' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:G1502:no:A1:G1502:0' header='yes' outcome='2'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Car Colour' ordinal='1' />
                  <column datatype='real' name='Car Value' ordinal='2' />
                  <column datatype='string' name='Gender' ordinal='3' />
                  <column datatype='string' name='State' ordinal='4' />
                  <column datatype='real' name='Loan %' ordinal='5' />
                  <column datatype='string' name='Car Make' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_5862D5340CFF4264B8F3F133B558C44A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average_loan_per_state'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='11'>Region-Wise Average Loan Percentage</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column datatype='real' name='[Loan %]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Loan %]' derivation='Avg' name='[avg:Loan %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]</rows>
        <cols>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{D9D6BDE3-268C-4776-AE44-183354C0DC37}' />
    </worksheet>
    <worksheet name='Color_Car_Value'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='11'>Customers&apos; Car Color Preference</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column aggregation='CountD' datatype='string' name='[Car Colour]' role='dimension' type='nominal' />
            <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
            <column-instance column='[Car Colour]' derivation='None' name='[none:Car Colour:nk]' pivot='key' type='nominal' />
            <column-instance column='[Car Value]' derivation='Sum' name='[pcto:sum:Car Value:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Car Value]' derivation='Sum' name='[sum:Car Value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Car Colour:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Car Colour:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Car Colour:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' value='Customer Color &#10;Preferences&#10;' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' />
              <wedge-size column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[sum:Car Value:qk]' />
              <size column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[sum:Car Value:qk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[pcto:sum:Car Value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{24DAC4F0-A17C-416E-A1F7-0354885F29D8}' />
    </worksheet>
    <worksheet name='Company_Wise_Car_Value'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='11'>Companies with Highest Car Valuation </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column aggregation='CountD' datatype='string' name='[Car Make]' role='dimension' type='nominal' />
            <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' name='[avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car Make]' derivation='None' name='[none:Car Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' included-values='in-range'>
            <min>10000.0</min>
            <max>13817.860000000001</max>
          </filter>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Car Make:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Car Make:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;BMW&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Buick&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Chevrolet&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Chrysler&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Citroën&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Dodge&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Eagle&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Honda&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Lexus&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Lincoln&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Lotus&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Morgan&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Nissan&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Peugeot&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Pontiac&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Ram&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Rolls-Royce&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Saab&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Saturn&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Spyker&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Studebaker&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Suzuki&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Tesla&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Toyota&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='&quot;Volkswagen&quot;' />
                <groupfilter function='member' level='[none:Car Make:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' direction='DESC' using='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' />
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</column>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' />
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <annotations>
          <annotation class='point' id='0' mark-position='0.722222' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Car Make: </run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Car Value: </run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields />
                      <y-fields>
                        <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>13817.860000000001</value>
                    <value>&quot;Aptera&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='242' y='0' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{0A4DB097-D8AD-495A-BE2D-AEC1BC3E023A}' />
    </worksheet>
    <worksheet name='Forecast'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='11'>Average Car Value And Loan %age Forecast</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Loan %]' role='measure' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' name='[avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loan %]' derivation='Avg' name='[avg:Loan %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' forecast-column-base='[avg:Car Value:qk]' forecast-column-type='forecast-prediction-interval-lower' name='[fPIL:avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' forecast-column-base='[avg:Car Value:qk]' forecast-column-type='forecast-prediction-interval-upper' name='[fPIU:avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' forecast-column-base='[avg:Car Value:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loan %]' derivation='Avg' forecast-column-base='[avg:Loan %:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Loan %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[yr:Date:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Date:ok]' to='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan %:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]' field-type='quantitative' major-origin='0.0' major-spacing='4000.0' max='9582.7913013357938' min='0.0' minor-origin='0.0' minor-spacing='1000.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]' value='' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#666666' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' value='Car Value &amp; Loan&#10;Forecast&#10;'>
              <formatted-text>
                <run>Car Value &amp; Loan&#10;Forecast&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan %:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
          </pane>
        </panes>
        <rows>([federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk] + [federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Loan %:qk])</rows>
        <cols>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[tyr:Date:qk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Forecast indicator: </run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Year of Date: </run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[tyr:Date:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Car Value: </run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[tyr:Date:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[tyr:Date:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fPIL:avg:Car Value:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fPIU:avg:Car Value:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>#2025-01-01 00:00:00#</value>
                    <value>7558.0049698305602</value>
                    <value>8869.6372722508459</value>
                    <value>8213.8211210407026</value>
                    <value>&quot;Estimate&quot;</value>
                    <value>&quot;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[fVal:avg:Car Value:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-226' y='156' />
          </annotation>
        </annotations>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Year-Trunc' range-size='7' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{9A231BE3-7DB1-40D1-B4F3-EEF073435A1F}' />
    </worksheet>
    <worksheet name='Gender_Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='10'>Gender-Wise Average Car and Loan value(2000-2019)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Gender]' role='dimension' type='nominal' />
            <column datatype='real' name='[Loan %]' role='measure' type='quantitative' />
            <column-instance column='[Car Value]' derivation='Avg' name='[avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Loan %]' derivation='Avg' name='[avg:Loan %:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gender]' derivation='None' name='[none:Gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Gender:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Gender:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Gender:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Gender:nk] * ([federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk] + [federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Loan %:qk]))</rows>
        <cols>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[tyr:Date:qk]</cols>
      </table>
      <simple-id uuid='{7602B510-A8D6-4C8A-9C34-897DFBAD9554}' />
    </worksheet>
    <worksheet name='Region_Wise_Car_value'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Times New Roman' fontsize='11'>Region-Wise Average Car Value </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (Assignment2_dataset)' name='federated.14gx5fp1xuv70p1aelb4x1hf8ak2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14gx5fp1xuv70p1aelb4x1hf8ak2'>
            <column datatype='real' name='[Car Value]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Car Value]' derivation='Avg' name='[avg:Car Value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]' field-type='quantitative' max='39950138.44460997' min='2223266.8046515472' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]' field-type='quantitative' max='10731456.592193609' min='-7662350.1482263282' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff5500</color>
                <color>#f86e29</color>
                <color>#f28650</color>
                <color>#ec9d76</color>
                <color>#e5b299</color>
                <color>#dfc6ba</color>
                <color>#d9d9d9</color>
                <color>#c9b2a7</color>
                <color>#b9907b</color>
                <color>#a97154</color>
                <color>#995533</color>
                <color>#893d16</color>
                <color>#7a2900</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' value='Region-Wise Average&#10;Car Value'>
              <formatted-text>
                <run>Region-Wise Average&#10;Car Value</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-0-boundaries-bg-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents-bg' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute-sub' value='false' />
            <format attr='enabled' id='admin-0-boundaries-sub' value='false' />
            <format attr='enabled' id='admin-1-boundaries-supress' value='false' />
            <format attr='enabled' id='admin-1-boundaries-sm-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-md-parents' value='false' />
            <format attr='enabled' id='admin-1-boundaries-lg-parents' value='false' />
            <format attr='enabled' id='admin1-water-lines-usa-tableau' value='false' />
            <format attr='enabled' id='9-dash-line-casing' value='false' />
            <format attr='enabled' id='9-dash-line' value='false' />
            <format attr='enabled' id='admin-1-label-9th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-8th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-7th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-6th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-1-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-1-label-1st-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-3rd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-2nd-tier' value='false' />
            <format attr='enabled' id='us-admin-1-label-abbr-1st-tier' value='false' />
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='admin-0-boundaries-bg' value='false' />
            <format attr='enabled' id='admin-0-boundaries' value='false' />
            <format attr='enabled' id='admin-0-boundaries-dispute' value='false' />
            <format attr='enabled' id='admin-0-label-5th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-4th-tier' value='false' />
            <format attr='enabled' id='admin-0-label-3rd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-2nd-tier' value='false' />
            <format attr='enabled' id='admin-0-label-1st-tier' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' />
              <text column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' />
              <lod column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' />
              <geometry column='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='top' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]</rows>
        <cols>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</field>
                  <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]</field>
                  <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Geometry (generated)]</field>
                  <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]</field>
                  <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9261.128333333334</value>
                <value>&quot;Hawaii&quot;</value>
                <value>&quot;MULTIPOLYGON(((-155.6808 18.9107,-155.7976 19.0105,-155.879 19.0339,-155.9188 19.119,-155.8841 19.3327,-155.9507 19.487,-155.9665 19.5805,-156.0616 19.7274,-155.9801 19.8428,-155.9205 19.8564,-155.8324 19.973,-155.8254 20.0325,-155.8835 20.1054,-155.9044 20.1961,-155.8663 20.2664,-155.7531 20.2356,-155.5871 20.119,-155.5561 20.1287,-155.2799 20.019,-155.1408 19.9172,-155.0816 19.8463,-155.0879 19.7277,-155.0035 19.7363,-154.9828 19.6437,-154.8068 19.5198,-154.8198 19.48,-154.9721 19.3497,-155.1312 19.2732,-155.3013 19.2587,-155.5104 19.1296,-155.5992 18.9684,-155.6808 18.9107)),((-156.6016 21.0313,-156.5257 20.9852,-156.4734 20.8911,-156.321 20.9463,-156.2389 20.9347,-156.1069 20.8231,-156.0084 20.7969,-155.9883 20.7078,-156.0454 20.6534,-156.2005 20.6272,-156.3002 20.5827,-156.4412 20.6046,-156.4611 20.7781,-156.627 20.8126,-156.6923 20.9471,-156.6016 21.0313)),((-156.5735 20.6039,-156.5514 20.5335,-156.679 20.5029,-156.6779 20.5545,-156.5735 20.6039)),((-157.0116 21.1824,-156.9668 21.214,-156.9144 21.1673,-156.7101 21.1584,-156.8021 21.0671,-156.8751 21.0469,-157.0763 21.1027,-157.2478 21.0868,-157.3109 21.1021,-157.2603 21.2176,-157.0116 21.1824)),((-156.9859 20.9286,-156.8951 20.9124,-156.8062 20.8066,-156.8361 20.7608,-156.9639 20.7316,-157.0569 20.9102,-156.9859 20.9286)),((-157.9832 21.712,-157.9328 21.6739,-157.8374 21.4581,-157.7813 21.4112,-157.7636 21.4627,-157.6509 21.2989,-157.7963 21.2573,-157.9819 21.3159,-158.1109 21.2995,-158.136 21.3688,-158.2797 21.5733,-158.1165 21.5839,-157.9832 21.712)),((-159.4018 22.2324,-159.2959 22.148,-159.3339 22.05,-159.3299 21.9612,-159.4444 21.8683,-159.6047 21.8927,-159.669 21.9538,-159.7573 21.9782,-159.7838 22.0652,-159.7308 22.1397,-159.582 22.2231,-159.4018 22.2324)),((-160.0914 22.0048,-160.0556 21.9958,-160.0735 21.8969,-160.1608 21.8628,-160.2028 21.7885,-160.229 21.8851,-160.0914 22.0048)))&quot;</value>
                <value>20.789999999999999</value>
                <value>-156.34</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>State: </run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Avg. Car Value: </run>
              <run>Æ&#10;</run>
              <run bold='true'><![CDATA[<[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Geometry (generated)]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Latitude (generated)]</field>
                      <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>12961.85</value>
                    <value>&quot;Vermont&quot;</value>
                    <value>&quot;POLYGON((-73.3431 45.0108,-73.1919 45.0136,-72.8456 45.0167,-72.5899 45.0132,-72.5544 45.0083,-72.2709 45.0042,-71.5025 45.0134,-71.5375 44.993,-71.5147 44.9268,-71.4948 44.912,-71.5743 44.8181,-71.5732 44.7919,-71.6317 44.7528,-71.5878 44.6615,-71.5654 44.6536,-71.5549 44.5939,-71.5377 44.5848,-71.5968 44.5534,-71.573 44.5363,-71.5771 44.5035,-71.6328 44.4839,-71.6642 44.4384,-71.7089 44.4116,-71.7647 44.4066,-71.8141 44.3823,-71.8377 44.3478,-71.8725 44.3366,-71.9069 44.3483,-71.9811 44.3375,-72.0331 44.3204,-72.0678 44.271,-72.0479 44.2385,-72.0659 44.1893,-72.0439 44.1569,-72.0523 44.1199,-72.0319 44.0769,-72.0796 44.0414,-72.117 43.9945,-72.118 43.9233,-72.1879 43.8561,-72.1834 43.8098,-72.205 43.7709,-72.2712 43.7341,-72.3023 43.7035,-72.3037 43.6681,-72.3349 43.6158,-72.3296 43.6002,-72.3711 43.5805,-72.3984 43.5108,-72.3915 43.4688,-72.4151 43.3659,-72.3909 43.355,-72.4099 43.3328,-72.3955 43.3126,-72.4343 43.2589,-72.4337 43.2333,-72.4521 43.1614,-72.4328 43.1188,-72.4351 43.0863,-72.4674 43.0526,-72.4441 43.0098,-72.4736 42.9722,-72.5318 42.9552,-72.5246 42.915,-72.5528 42.885,-72.5428 42.8085,-72.5131 42.7638,-72.4917 42.7727,-72.4585 42.7268,-72.9303 42.7393,-73.265 42.7459,-73.2909 42.8019,-73.2787 42.8334,-73.2743 42.9437,-73.2546 43.3147,-73.2468 43.5258,-73.2586 43.5649,-73.2973 43.5797,-73.3026 43.6257,-73.3719 43.6245,-73.3981 43.5681,-73.4286 43.584,-73.4279 43.6344,-73.4052 43.6884,-73.3513 43.7698,-73.3893 43.8312,-73.3743 43.8743,-73.4089 43.9345,-73.4104 44.0265,-73.4379 44.0451,-73.3906 44.1911,-73.3634 44.2077,-73.3133 44.2641,-73.3336 44.3723,-73.2937 44.4382,-73.3067 44.5003,-73.3386 44.5468,-73.3615 44.5636,-73.3898 44.6172,-73.3697 44.6635,-73.3638 44.7453,-73.335 44.8041,-73.3795 44.838,-73.3562 44.9045,-73.3386 44.9194,-73.3431 45.0108))&quot;</value>
                    <value>44.1584</value>
                    <value>-72.767799999999994</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{A25F1B76-41BE-4304-9E2C-4526CE1E7E02}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Competitive Environment Analysis of USA&apos;s Car Industry 2000-2019 
</run>
            <run fontcolor='#666666' fontsize='9'>(Region-Wise, Company-Wise, Color-Wise and Gender-Wise Analysis)</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-weight' value='bold' />
          <format attr='border-color' value='#000000' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
          <format attr='background-color' value='#ffaa00' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='wrap' value='auto' />
          <format attr='text-align' value='left' />
          <format attr='font-family' value='Times New Roman' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' param='vert' type-v2='layout-flow' w='83500' x='800' y='1000'>
              <zone h='6250' id='5' type-v2='title' w='83500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='149' h='98000' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='14900' x='84300' y='1000'>
              <zone h='10250' id='22' name='Region_Wise_Car_value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' type-v2='color' w='14900' x='84300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='23' name='Region_Wise_Car_value' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' type-v2='highlighter' w='14900' x='84300' y='11250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='2750' id='26' name='Company_Wise_Car_Value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' type-v2='size' w='14900' x='84300' y='17750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='234' h='30250' id='10' is-fixed='true' name='Forecast' pane-specification-id='1' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' type-v2='color' w='14900' x='84300' y='20500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='29125' id='7' name='Forecast' w='82700' x='1200' y='70750' />
        <zone h='30625' id='16' name='Color_Car_Value' w='28400' x='1100' y='6750' />
        <zone h='33500' id='21' name='Region_Wise_Car_value' w='48300' x='1100' y='37625' />
        <zone h='33000' id='24' name='Company_Wise_Car_Value' w='34700' x='49300' y='37750' />
        <zone h='30500' id='27' name='Average_loan_per_state' w='55700' x='28300' y='6875' />
        <zone h='35625' id='54' name='Color_Car_Value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' type-v2='color' w='14000' x='84900' y='36500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run>Competitive Environment Analysis of USA&apos;s Car Industry 2000-2019 
</run>
                <run fontcolor='#666666' fontsize='9'>(Region-Wise, Company-Wise, Color-Wise and Gender-Wise Analysis)</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='59' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6250' id='5' type-v2='title' w='83500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='245' h='30625' id='16' is-fixed='true' name='Color_Car_Value' w='28400' x='1100' y='6750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35625' id='54' name='Color_Car_Value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' type-v2='color' w='14000' x='84900' y='36500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='30500' id='27' is-fixed='true' name='Average_loan_per_state' w='55700' x='28300' y='6875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='23' name='Region_Wise_Car_value' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' type-v2='highlighter' w='14900' x='84300' y='11250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='268' h='33500' id='21' is-fixed='true' name='Region_Wise_Car_value' w='48300' x='1100' y='37625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10250' id='22' name='Region_Wise_Car_value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' type-v2='color' w='14900' x='84300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='33000' id='24' is-fixed='true' name='Company_Wise_Car_Value' w='34700' x='49300' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2750' id='26' name='Company_Wise_Car_Value' pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' type-v2='size' w='14900' x='84300' y='17750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='29125' id='7' is-fixed='true' name='Forecast' w='82700' x='1200' y='70750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='234' h='30250' id='10' name='Forecast' pane-specification-id='1' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' type-v2='color' w='14900' x='84300' y='20500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0CDB9175-87C6-494E-B5A0-E006C547C9AF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Average_loan_per_state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5D15CCB5-ADE0-4172-BF15-7FBBB90A791C}' />
    </window>
    <window class='worksheet' name='Color_Car_Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[sum:Car Value:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{386E4661-E8B4-418D-A95D-FD5DBE57F327}' />
    </window>
    <window class='worksheet' name='Region_Wise_Car_value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A930A997-B85B-4CC5-A0D6-90876EF0E9A3}' />
    </window>
    <window class='worksheet' name='Gender_Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{380176DD-E284-4DEF-8692-FFA3BC3CCE96}' />
    </window>
    <window class='worksheet' name='Company_Wise_Car_Value'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[avg:Car Value:qk]</field>
            <field>[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC045DDC-DDD0-430E-9F9C-1084B0D896DB}' />
    </window>
    <window class='worksheet' name='Forecast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF879A88-194C-4D2E-83C0-B3855B7BD535}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Average_loan_per_state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Color_Car_Value'>
          <zoom type='entire-view' />
          <highlight field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Car Colour:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Company_Wise_Car_Value'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast'>
          <zoom type='entire-view' />
          <highlight field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[:Measure Names]&#10;[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Region_Wise_Car_value'>
          <zoom type='entire-view' />
          <highlight field='[federated.14gx5fp1xuv70p1aelb4x1hf8ak2].[none:State:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{0105F4C6-EA9D-46AB-B39F-28A588212C33}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average_loan_per_state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Color_Car_Value' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUg0lEQVR4nO3daVAc553H8W/3DAzDAAIBQgIJCUnoRuiwdVg+ZFtWbGvj2LFzb3Yr2Urt
      1m4qLzYvtmq3aqtS2arNJpXN1m5Oe7NJbCdO5MTxIds6rFsgBJKQEAhxiEPcMMAAc09PP/sC
      mRgLBDqYQen/p4qSmH76eR6qnl8/3dOXppRSCGFRerw7IEQ8SQCEpUkAhKVJAISlSQCEpUkA
      hKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISl
      SQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkA
      hKVJAISlSQCEpUkAhKVJAISlSQCEpUkAxD1JhTycq24iMtJDVUPH2Oe+nms0dHZz7sKladVj
      n6kOCjGTNEcaI61HOdbtYtWmB6kpO0T9cAoPFyTjNpLp6ehk3dJs3njrEJsfe5okM0C6zUeH
      mk+KGmLRwnxAZgBxz9LZvmMz7X0R5icP8cYbR7h65iBNI38qcfhICU+/8DxVZ07S3XiF0vou
      uutLqGvo+UgtQtyjbM4c1izLRrelkJubQdaSQtLsGhoauqazKCuZ1155hagji3nzEnB7NHD3
      krQwb6wOTSml4vg3CBFXMgMIS5MAiHtW97UGysvLqaprBkApk4aaSirO1hBWJr3tzXjDEBpx
      c7m+lahSDI8Mj6tDAiDuWbpuw66HqDh3GQAzEuDc+SoS7Db8nh6aK49wqRfKy8tpulrF1Zoq
      mnqD4+uIR8eFuBvmLVxKhsPOjoe3A2CqYXqau6ltbsM5ZwGbigoByE5z0tk7SJu7n8unDnGt
      3ztWhwRAxI27+Tzf+fa3+P4PX6RjKHJjASPIsbKKSddX0QgtvX4KcjMA0MM2nvuHr1NIN01/
      GuOsun8nT23fwHxthPlr1tHS6R5bJifCRNxkFWzik7t9OPOLSY/2sPfVoyzZvJM0XwMl1b3s
      eWY3nuHhSdc3zSCFKzfi0DW62hpxZebRcOotQlnr2eFv5NcHagk5u1n56U+hp2Sx+sFCWt4+
      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
    </thumbnail>
    <thumbnail height='192' name='Company_Wise_Car_Value' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Ugld17l+/TptbW2Uy+Xbznx6ocjYv/kSK999CffB/ch2G2a5cWdXcBPJrBTHuPbnmDM/wHL/
      /4LsbryQIpPJcObMGQ4ePIjT6WRpaYm2tjYmJibYvn07iqJQLpdxOp115drtdjM4OMiOHTuw
      2W7OVIl4Cqs7yI6O6E2fb8R9993HwsJCw0x9p+ju7qa1tZXl5eW6GPPmm2/W+3VN3j979izV
      ahVd1+uDY3h4mFQqhSzLHD9+vKFcWZb5yZ/8SQzDIJfLcSP2799PKBTC6/XeVPzQNK3OHGvI
      ZDL09/fXRTCAkZERIpEIExMT9PTUJo3Z2Vny+Tw+n4+nnnoKqHkIrNF2794NwMrKCu3t7Q36
      ncViYefOnZsYDWpM3dLSgmEYpNNpAoEApmlSKBS4evVq/flG9Pf31zct7woD3NjRt0NlJc7A
      b/+f5K7VrBmFwSH8h3eRPHO1MaGp37IMkZlEe/N3sT7wL5BDe+r0WCxGe3s7586dQ1VVKpUK
      i4uLlMtlTp8+TVtbG0IINE2jtbWVVCpFJpPB4XDc1ty4++BR2jIpqsY7K7WVZ79ACAn10d+m
      fPENlG2PYUy9AUjYP/a775gfaivq9773PQKBQL1dvb29TE9PN+gUzc3NzM3NEQwG67Rt27ax
      srJy01lPCMEbb7zBtm3byOfzBAKBhudWq5WWlhYmJibw+/2bVoDHH38c0zTrq4skSTz00EMc
      PHiQarWK01k7SL+mo6ytFFCbGG7EzWiPPfYYgUCAYnE9nmyhUECSpJsaPWRZZm5ujmvXrvHw
      ww8TCASQJIlKpcKePXvIZDI3zRMIBLh69ep7ZwAhBOVyGavVimEY2Gw2crkcqqqSz+dxOGqy
      utVqrTfcKJZYfPabFCem18upaigWA8XlwCiUNtZw+wZUMmjn/wPWR/8Vsrv2sbu7uzlz5gyH
      Dh1iZmaGAwcOUK1WSSQStLa2YrfbiUajpNNp2traOHPmDPv27WNiYuIdLUpn33ydcNfuWmiT
      28BMjNf+Ll1Du/INJEcA7co3QJKRA11oV/8O6+EvItl9IMlYtp9AlLNIirVGA44cOUJHR0fD
      ABRCkEqlaG5eX/WSySSzs7MNA62/v59CocDCwkLdWrQRwWCQYrHYMMDWsDYjz87OsnPnzoZn
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender_Wise' width='192'>
      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
      AFJK+/9HK9SNDAheLgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region_Wise_Car_value' width='192'>
      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
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
